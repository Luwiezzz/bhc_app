# Generated by Django 3.2.8 on 2022-12-18 14:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birthday', models.DateField(null=True)),
                ('c_number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^(09|\\+639)\\d{9}$')])),
                ('address', models.CharField(max_length=300)),
                ('user_type', models.CharField(choices=[('P', 'Patient'), ('A', 'Administration')], default='A', max_length=30, verbose_name='user_type')),
                ('cs', models.CharField(max_length=300, null=True)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=300, null=True, verbose_name='sex')),
                ('philhealth_status', models.CharField(max_length=300, null=True)),
                ('philhealth_number', models.IntegerField(null=True)),
                ('head_of_fam', models.CharField(max_length=300, null=True)),
                ('covid_vacc_status', models.CharField(max_length=300, null=True)),
                ('tobacco_use', models.CharField(max_length=300, null=True)),
                ('bp', models.CharField(max_length=30, null=True)),
                ('temp', models.CharField(max_length=30, null=True)),
                ('pr', models.CharField(max_length=300, null=True)),
                ('rr', models.CharField(max_length=300, null=True)),
                ('wt', models.CharField(max_length=300, null=True)),
                ('ht', models.CharField(max_length=300, null=True)),
                ('bmi', models.CharField(max_length=300, null=True)),
                ('pwd', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=300, null=True, verbose_name='yorn')),
                ('senor', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=300, null=True, verbose_name='yorn')),
                ('injury', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=300, null=True, verbose_name='yorn')),
                ('mental_health', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=300, null=True, verbose_name='yorn')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('position', models.CharField(max_length=100)),
                ('specialty', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('picture', models.ImageField(upload_to='images')),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('dosage', models.CharField(max_length=100)),
                ('medicine_type', models.CharField(max_length=100)),
                ('picture', models.ImageField(upload_to='medicine')),
                ('quantity', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='News_and_Updates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_and_updates', models.ImageField(upload_to='news_and_updates')),
                ('headline', models.CharField(max_length=200)),
                ('fb_link', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_picture', models.ImageField(upload_to='staff')),
                ('year', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Patient_Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('history_illness', models.CharField(max_length=300)),
                ('physical_exam', models.CharField(max_length=300)),
                ('assessment', models.CharField(max_length=300)),
                ('treatment_or_management_plan', models.CharField(max_length=300)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bhc_app.registration')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('reasons', models.CharField(max_length=500)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bhc_app.registration')),
            ],
        ),
    ]
